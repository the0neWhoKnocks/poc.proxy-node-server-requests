version: "3.4"

services:
  app:
    build:
      args:
        # NOTE - Check `.env` for variable values
        CONTAINER_APP_PARENT_DIR: $CONTAINER_APP_PARENT_DIR
        CONTAINER_APP_DIR: $CONTAINER_APP_DIR
        HOST_PROXY_WEB_PORT: $HOST_PROXY_WEB_PORT
        NODE_ENV: production
        SERVER_PORT: $CONTAINER_SERVER_PORT
      context: ./
      dockerfile: ./app/Dockerfile
    container_name: poc-app
    environment:
      # NOTE - Using the name of the container `poc-proxy` for the domain
      HTTP_PROXY: http://poc-proxy:$CONTAINER_PROXY_PORT
      HTTPS_PROXY: http://poc-proxy:$CONTAINER_PROXY_PORT
      NODE_EXTRA_CA_CERTS: /tmp/proxy-cert.crt
      SERVER_PORT: $CONTAINER_SERVER_PORT
    image: poc-app
    networks: 
      - poc-net
    ports:
      # Map the Host port to the Container's exposed port
      - "$HOST_SERVER_PORT:$CONTAINER_SERVER_PORT"
    volumes:
      # Map local files to Container for real-time changes
      - ./app/src:$CONTAINER_APP_DIR/src
  proxy:
    build:
      args:
        # NOTE - Check `.env` for variable values
        CONTAINER_PROXY_PARENT_DIR: $CONTAINER_PROXY_PARENT_DIR
      context: ./proxy
      dockerfile: Dockerfile
    container_name: poc-proxy
    image: poc-proxy
    networks: 
      - poc-net
    ports:
      # Map Host ports to the Container's exposed ports
      - "$HOST_PROXY_PORT:$CONTAINER_PROXY_PORT"
      - "$HOST_PROXY_WEB_PORT:$CONTAINER_PROXY_WEB_PORT"
    volumes:
      # Map local directory to Container for easy access of settings
      - ./proxy/src:/root/.anyproxy
      # Map integration rules to Container rules
      - ./tests/rules.js:$CONTAINER_PROXY_PARENT_DIR/rules.js
      - ./tests/recordings:$CONTAINER_PROXY_PARENT_DIR/recordings
    
networks:
  poc-net:
    driver: bridge
